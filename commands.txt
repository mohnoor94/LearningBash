pwd => present/print working directory

ls  => list storage
    -a  =>  show hidden files
    -l  =>  show details about files (and permissions)
    > file  =>  forward the output to the file (can be used with any command)
    >> file =>  append the output to the file 
    2> file =>  forward only standard air to the file (System errors)
    1> file =>  forward only standard output to the file

cd  => change directory
        =>  home directory
    ~   =>  home directory
    /   =>  root directory

mkdir <name>    =>  make directory
rmdir <name>    =>  remove directory

pushd <directory>   =>  push directory: to push a directory into stack (memory)
popd  <directory>   =>  pop directory:  to pop a directory from stack (memory)

touch <fileName1 fileName2 ...> =>  create a file(s) with a name(s)
                                    or to change the updating time of a current file

rm <file>   =>  remove file
            -r  recursively (like removing a directory with all of its contents)

mv <file1 file2>    =>  move a file into another path/directory
                        or rename a file from 'file1' to 'file2'
                        or both

cp <file1 file2>    =>  copy a file (to same or other diectory)

echo "bla bla bla"  =>  prints 'bla bla bla'
                    > file  =>  writes 'bla bla bla' to the file
                    >> file =>  appends 'bla bla bla' to the file

cat random.txt randome2.txt          => read 2 files using 'cat' program
cat random.txt randome2.txt | less   => read 2 files using 'cat' and open
                                        the result using 'less'

sudo    => super user do. To execute any command as a super user (admin/root).
        -s  =>  emulating the 'root' user.
                To execute any command without typing 'sudo' at first.
                You should execute 'exit' command to leave the 'root' user.

chmod <permissions> <file>  =>   change mod (setting bits)
                                - permissions for: user - group - others
                                - example:
                                chmod 760 file.txt
                                user    => 7 => 111 => Read Write Execute
                                group   => 6 => 110 => Read Write
                                others  => 0 => 000 => Do nothing
                                - we can do this for a group of files as well
                                - example
                                chmod 644 *.txt
                                user    => 6 => 110 => Read Write
                                group   => 4 => 100 => Read
                                others  => 4 => 100 => Read
                                - mod 644 is the default

chown <group:user> <file>   =>  change owner
                                - example:
                                sudo chown abukhleif:abukhleif root.txt
